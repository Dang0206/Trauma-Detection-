{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNnzhwErs3pH6g3wbGpUEEp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"CAVcnw1SB_Ea"},"outputs":[],"source":["import pandas as pd\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","from sklearn.model_selection import GridSearchCV"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iww9-mRoEB2S","executionInfo":{"status":"ok","timestamp":1750590967767,"user_tz":-420,"elapsed":25797,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"7d88a52c-9c7f-4fb5-c721-802742b64d45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["!pip install pyvi"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OOSrv8_hr5jp","executionInfo":{"status":"ok","timestamp":1750590978567,"user_tz":-420,"elapsed":10803,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"60696f2d-bd64-466d-c69f-56dc9ee3da1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyvi\n","  Downloading pyvi-0.1.1-py2.py3-none-any.whl.metadata (2.5 kB)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (from pyvi) (1.6.1)\n","Collecting sklearn-crfsuite (from pyvi)\n","  Downloading sklearn_crfsuite-0.5.0-py2.py3-none-any.whl.metadata (4.9 kB)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->pyvi) (2.0.2)\n","Requirement already satisfied: scipy>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->pyvi) (1.15.3)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->pyvi) (1.5.1)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn->pyvi) (3.6.0)\n","Collecting python-crfsuite>=0.9.7 (from sklearn-crfsuite->pyvi)\n","  Downloading python_crfsuite-0.9.11-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.3 kB)\n","Requirement already satisfied: tabulate>=0.4.2 in /usr/local/lib/python3.11/dist-packages (from sklearn-crfsuite->pyvi) (0.9.0)\n","Requirement already satisfied: tqdm>=2.0 in /usr/local/lib/python3.11/dist-packages (from sklearn-crfsuite->pyvi) (4.67.1)\n","Downloading pyvi-0.1.1-py2.py3-none-any.whl (8.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.5/8.5 MB\u001b[0m \u001b[31m59.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading sklearn_crfsuite-0.5.0-py2.py3-none-any.whl (10 kB)\n","Downloading python_crfsuite-0.9.11-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m46.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: python-crfsuite, sklearn-crfsuite, pyvi\n","Successfully installed python-crfsuite-0.9.11 pyvi-0.1.1 sklearn-crfsuite-0.5.0\n"]}]},{"cell_type":"code","source":["from pyvi import ViTokenizer, ViPosTagger\n","\n","ViTokenizer.tokenize(u\"Trường đại học công nghệ thông tin\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"3mRbOPPNr4P3","executionInfo":{"status":"ok","timestamp":1750590978613,"user_tz":-420,"elapsed":44,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"7f2c3e90-6d5b-4922-f444-f93fdd30aa97"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Trường đại_học công_nghệ thông_tin'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data = pd.read_excel('/content/drive/MyDrive/Trauma Detect - SG/train_data.xlsx')"],"metadata":{"id":"GgLCO-T3Wzll"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Chuyển data thành dạng chưỡi và xóa khonagr trắng\n","data['PHÂN LOẠI'] = data['PHÂN LOẠI'].astype(str).str.strip()\n","# Chuyển cột 'label' về dạng số (Mapping nhãn)\n","data['PHÂN LOẠI'] = data['PHÂN LOẠI'].map({'1-Không có nỗi đau': 0, '2-Nỗi đau tinh thần': 1, '3-Nỗi đau tồn tại': 2, '4-Nỗi đau xã hội': 3})\n","\n","# Kiểm tra dữ liệu\n","print(data.head(15))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i_f0Lx24CMSa","executionInfo":{"status":"ok","timestamp":1750590981431,"user_tz":-420,"elapsed":81,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"a6d7b132-5e2e-4a82-d70d-1cc6e03ec0e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    STT                  MÃ BÀI  \\\n","0     0   valid_non_abusive_777   \n","1     1    test_non_abusive_840   \n","2     4   Test_ non_abusive_843   \n","3     5   Test_ non_abusive_845   \n","4     6    Test_non_abusive_846   \n","5     7   Test_ non_abusive_847   \n","6     8  Test_ non_ abusive_848   \n","7     9   Test_ non_abusive_849   \n","8    11   Test_ non_abusive_853   \n","9    12   Test_ non_abusive_854   \n","10   13    test_non_abusive_855   \n","11   14   Test_ non_abusive_856   \n","12   15   Test_ non_abusive_857   \n","13   16   Test_ non_abusive_859   \n","14   17   Test_non_abusive _860   \n","\n","                                             NỘI DUNG  PHÂN LOẠI  \\\n","0   Tôi bế tắc và tuyệt vọng vô cùng, một người ch...          1   \n","1   Tôi 32 tuổi, kết hôn được bốn năm, làm văn phò...          1   \n","2   Tôi 38 tuổi, quê ở miền Trung, chồng nhỏ hơn m...          0   \n","3   Nhà tôi có hai chị em. Chị gái 32 tuổi; cấp 2-...          0   \n","4   Tôi 48 tuổi, chưa lập gia đình, làm nông, ...          0   \n","5   Tôi và bạn trai đều 26 tuổi, yêu nhau bốn năm,...          3   \n","6   Năm năm gặp lại cậu, tâm trạng tôi vừa vui, vừ...          0   \n","7   Chúng ta biết việc nhậu nhiều không tốt, ảnh h...          0   \n","8   Có phải tôi nên buông tay em để tình yêu có th...          1   \n","9   Tôi là tác giả bài: \"Gia đình em cấm cản vì tô...          0   \n","10  Đọc bài: \"Vợ coi thường khi tôi thất nghiệp\", ...          1   \n","11  Tôi và bạn gái quen nhau được hai năm, tôi 36 ...          1   \n","12  Tôi là mẹ đơn thân, ngoại hình tốt, công việc ...          0   \n","13  Tôi phải lo cho đứa con sắp sinh, giờ có chồng...          1   \n","14  Vợ chồng tôi làm ăn xa quê hương. Con còn nhỏ ...          0   \n","\n","                                 TỪ/ CỤM TỪ LIÊN QUAN  \\\n","0   bế tắc, tuyệt vọng, không xứng đáng tồn tại, t...   \n","1   Tôi cảm thấy tủi thân, một mình gồng gánh chi ...   \n","2                                                 NaN   \n","3                                                 NaN   \n","4   Tôi đang chưa biết nên thế nào. Ở vậy sau này ...   \n","5   Tôi rất buồn khi thấy anh im lặng như thế, cảm...   \n","6                                                 NaN   \n","7                                                 NaN   \n","8   Nếu em không muốn cưới thì quen tôi gần hai nă...   \n","9                                                 NaN   \n","10  Tôi vừa bế con nhỏ, vừa thay giặt khăn chườm c...   \n","11  Tôi nghe xong rất buồn nhưng cũng cố khuyên nh...   \n","12   Tôi không buồn nhưng sốc, tự hỏi anh có yêu t...   \n","13  Tôi đang có biểu hiện trầm cảm nhưng không tìm...   \n","14                                                NaN   \n","\n","                           GHI CHÚ  \n","0                          Example  \n","1        không ngờ được lòng người  \n","2        phiền khi mẹ để chăm ở cữ  \n","3   phiền khi chăm sóc người bệnh?  \n","4                nên lấy hay không  \n","5                              NaN  \n","6           Chia sẻ, chuyện đã qua  \n","7                       chồng nhậu  \n","8                              NaN  \n","9                 chia sẻ niềm vui  \n","10                             NaN  \n","11                       thất vọng  \n","12                  sốc về hành vi  \n","13                             NaN  \n","14        sốc về lời nói, suy nghĩ  \n"]}]},{"cell_type":"code","source":["# from sklearn.model_selection import KFold\n","# from sklearn.linear_model import LogisticRegression\n","# from sklearn.feature_extraction.text import CountVectorizer\n","# from sklearn.metrics import accuracy_score\n","# import numpy as np\n","# import pandas as pd\n","\n","# # Xóa các dòng có giá trị NaN trong cột 'text' hoặc 'label'\n","# data = data.dropna(subset=['NỘI DUNG', 'PHÂN LOẠI'])\n","\n","# # Chuyển nhãn về dạng số\n","# data['PHÂN LOẠI'] = data['PHÂN LOẠI'].astype(int)\n","\n","# # Reset index\n","# data = data.reset_index(drop=True)\n","\n","# # Vector hóa văn bản\n","# vectorizer = CountVectorizer(ngram_range=(1, 2))\n","# X_all = vectorizer.fit_transform(data['NỘI DUNG'])\n","# y_all = data['PHÂN LOẠI']\n","\n","# test_data = pd.read_excel('/content/drive/MyDrive/Trauma Detect - SG/Result/Gemeni.xlsx')\n","# test_data = test_data[['input', 'true_label']]\n","\n","# # Ensemble với 10-fold cross-validation\n","# kf = KFold(n_splits=10, shuffle=True, random_state=42)\n","# models = []\n","# all_preds = np.zeros_like(y_all)\n","\n","# for fold, (train_idx, val_idx) in enumerate(kf.split(X_all)):\n","#     X_train, y_train = X_all[train_idx], y_all.iloc[train_idx]\n","#     X_val, y_val = X_all[val_idx], y_all.iloc[val_idx]\n","\n","#     model = LogisticRegression(random_state=42, max_iter=1000)\n","#     model.fit(X_train, y_train)\n","#     models.append(model)\n","\n","#     # Dự đoán nhãn trên fold hiện tại\n","#     y_pred = model.predict(X_val)\n","#     all_preds[val_idx] = y_pred\n","\n","# # Đánh giá chung trên toàn bộ dữ liệu qua cross-validation\n","# accuracy = accuracy_score(y_all, all_preds)\n","# print(\"Độ chính xác trung bình qua 10-fold cross-validation:\", accuracy)\n","\n"],"metadata":{"id":"Dw-NFqqJ8GQw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import KFold\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.metrics import accuracy_score\n","from pyvi import ViTokenizer\n","from tqdm import tqdm\n","\n","# Load dữ liệu huấn luyện\n","data = data.dropna(subset=['NỘI DUNG', 'PHÂN LOẠI'])  # Xóa dòng thiếu\n","data['PHÂN LOẠI'] = data['PHÂN LOẠI'].astype(int)     # Đảm bảo nhãn là int\n","data = data.reset_index(drop=True)\n","\n","# Load dữ liệu test\n","test_data = pd.read_excel('/content/drive/MyDrive/Trauma Detect - SG/Result/Gemeni.xlsx')\n","test_data = test_data[['input', 'true_label']]\n","test_data = test_data.dropna(subset=['input', 'true_label'])\n","test_data['true_label'] = test_data['true_label'].map({'1-Không có nỗi đau': 0, '2-Nỗi đau tinh thần': 1, '3-Nỗi đau tồn tại': 2, '4-Nỗi đau xã hội': 3})\n","\n","\n","# Tách từ với ViTokenizer\n","data['NỘI DUNG'] = data['NỘI DUNG'].apply(ViTokenizer.tokenize)\n","test_data['input'] = test_data['input'].apply(ViTokenizer.tokenize)\n","\n","# Vector hóa\n","vectorizer = CountVectorizer(ngram_range=(1, 2))\n","X_all = vectorizer.fit_transform(data['NỘI DUNG'])\n","y_all = data['PHÂN LOẠI']\n","X_test = vectorizer.transform(test_data['input'])\n","\n","# Chuẩn bị mô hình ensemble\n","kf = KFold(n_splits=10, shuffle=True, random_state=42)\n","n_classes = len(np.unique(y_all))\n","test_probs = np.zeros((X_test.shape[0], n_classes))\n","oof_preds = np.zeros_like(y_all)\n","\n","# Huấn luyện 10 mô hình với KFold và dự đoán xác suất\n","for fold, (train_idx, val_idx) in tqdm(enumerate(kf.split(X_all))):\n","    X_train, y_train = X_all[train_idx], y_all.iloc[train_idx]\n","    X_val, y_val = X_all[val_idx], y_all.iloc[val_idx]\n","\n","    model = LogisticRegression(random_state=42, max_iter=1000)\n","    model.fit(X_train, y_train)\n","\n","    # Dự đoán OOF cho train\n","    y_pred_val = model.predict(X_val)\n","    oof_preds[val_idx] = y_pred_val\n","\n","    # Dự đoán xác suất trên test\n","    test_probs += model.predict_proba(X_test)\n","\n","# Trung bình xác suất từ tất cả mô hình\n","test_probs /= kf.get_n_splits()\n","final_test_preds = np.argmax(test_probs, axis=1)\n","\n","# Gán kết quả vào test_data\n","test_data['predicted_label'] = final_test_preds\n","\n","# Đánh giá độ chính xác nếu có nhãn thật\n","test_accuracy = accuracy_score(test_data['true_label'], test_data['predicted_label'])\n","print(\"Độ chính xác trên tập test:\", test_accuracy)\n","\n","# Đánh giá độ chính xác trung bình từ 10-fold cross-validation\n","train_cv_accuracy = accuracy_score(y_all, oof_preds)\n","print(\"Độ chính xác trung bình qua 10-fold cross-validation:\", train_cv_accuracy)\n","\n","# (Tuỳ chọn) Lưu kết quả ra file\n","# test_data.to_excel('ensemble_predictions.xlsx', index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LQ46He6HA8WU","executionInfo":{"status":"ok","timestamp":1750591414343,"user_tz":-420,"elapsed":432858,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"68bb1208-7722-42cb-8c79-af8c4d76c04d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["10it [06:45, 40.52s/it]"]},{"output_type":"stream","name":"stdout","text":["Độ chính xác trên tập test: 0.6105769230769231\n","Độ chính xác trung bình qua 10-fold cross-validation: 0.5944645006016848\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","\n","# In F1-score, precision, recall cho từng nhãn\n","report = classification_report(test_data['true_label'], test_data['predicted_label'], target_names=[\n","    '0 - Không có nỗi đau',\n","    '1 - Nỗi đau tinh thần',\n","    '2 - Nỗi đau tồn tại',\n","    '3 - Nỗi đau xã hội'\n","])\n","print(\"Báo cáo đánh giá trên tập test:\\n\", report)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AeqxKwbEGbzY","executionInfo":{"status":"ok","timestamp":1750591414374,"user_tz":-420,"elapsed":36,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"75f6c16d-d8e1-405a-d1d2-08fd63279d24"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Báo cáo đánh giá trên tập test:\n","                        precision    recall  f1-score   support\n","\n"," 0 - Không có nỗi đau       0.64      0.67      0.65       104\n","1 - Nỗi đau tinh thần       0.59      0.66      0.62        86\n","  2 - Nỗi đau tồn tại       0.00      0.00      0.00        10\n","   3 - Nỗi đau xã hội       0.00      0.00      0.00         8\n","\n","             accuracy                           0.61       208\n","            macro avg       0.31      0.33      0.32       208\n","         weighted avg       0.56      0.61      0.58       208\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import f1_score\n","\n","# Macro F1-score (trung bình đều các nhãn)\n","f1_macro = f1_score(test_data['true_label'], test_data['predicted_label'], average='macro')\n","print(\"F1-score macro (trung bình các nhãn):\", f1_macro)\n","\n","# Weighted F1-score (có trọng số theo số mẫu mỗi nhãn)\n","f1_weighted = f1_score(test_data['true_label'], test_data['predicted_label'], average='weighted')\n","print(\"F1-score weighted (trung bình có trọng số):\", f1_weighted)\n","\n","# Micro F1-score (toàn cục)\n","f1_micro = f1_score(test_data['true_label'], test_data['predicted_label'], average='micro')\n","print(\"F1-score micro (toàn cục):\", f1_micro)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xcpsthm3vvsi","executionInfo":{"status":"ok","timestamp":1750591414395,"user_tz":-420,"elapsed":20,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"2a5a338a-b817-4011-b635-e785b055787e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["F1-score macro (trung bình các nhãn): 0.3192891067871917\n","F1-score weighted (trung bình có trọng số): 0.5846690080258335\n","F1-score micro (toàn cục): 0.6105769230769231\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, f1_score, precision_score, recall_score\n","\n","# Tính classification report (dưới dạng dictionary để dễ xử lý)\n","report_dict = classification_report(\n","    test_data['true_label'],\n","    test_data['predicted_label'],\n","    target_names=[\n","        '0 - Không có nỗi đau',\n","        '1 - Nỗi đau tinh thần',\n","        '2 - Nỗi đau tồn tại',\n","        '3 - Nỗi đau xã hội'\n","    ],\n","    output_dict=True,\n","    zero_division=0\n",")\n","\n","# Chuyển các giá trị sang phần trăm\n","for label in report_dict:\n","    if isinstance(report_dict[label], dict):\n","        for metric in report_dict[label]:\n","            report_dict[label][metric] *= 100\n","\n","# In lại báo cáo theo định dạng phần trăm\n","print(\"Báo cáo đánh giá trên tập test (tính theo %):\\n\")\n","for label, scores in report_dict.items():\n","    if isinstance(scores, dict):\n","        print(f\"{label:<25}  Precision: {scores['precision']:.2f}%  Recall: {scores['recall']:.2f}%  F1-score: {scores['f1-score']:.2f}%\")\n","\n","# Tính và in F1-score micro theo %\n","f1_micro = f1_score(test_data['true_label'], test_data['predicted_label'], average='micro') * 100\n","print(f\"\\nF1-score (micro): {f1_micro:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-yjBxuRVKam3","executionInfo":{"status":"ok","timestamp":1750591414605,"user_tz":-420,"elapsed":169,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"92cb4b90-2d90-43e6-8bb8-dd9691c1b918"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Báo cáo đánh giá trên tập test (tính theo %):\n","\n","0 - Không có nỗi đau       Precision: 63.64%  Recall: 67.31%  F1-score: 65.42%\n","1 - Nỗi đau tinh thần      Precision: 58.76%  Recall: 66.28%  F1-score: 62.30%\n","2 - Nỗi đau tồn tại        Precision: 0.00%  Recall: 0.00%  F1-score: 0.00%\n","3 - Nỗi đau xã hội         Precision: 0.00%  Recall: 0.00%  F1-score: 0.00%\n","macro avg                  Precision: 30.60%  Recall: 33.40%  F1-score: 31.93%\n","weighted avg               Precision: 56.11%  Recall: 61.06%  F1-score: 58.47%\n","\n","F1-score (micro): 61.06%\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","# Tính confusion matrix\n","cm = confusion_matrix(test_data['true_label'], test_data['predicted_label'])\n","\n","# Nhãn lớp\n","label_names = ['0-No Trauma', '1-Mental Trauma', '2-Existential Trauma', '3-Social Trauma']\n","\n","# Tạo hình với kích thước vừa đủ\n","fig, ax = plt.subplots(figsize=(8, 6))\n","disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=label_names)\n","\n","# Vẽ với nhãn nhỏ hơn\n","disp.plot(ax=ax, cmap='Blues', values_format='d', xticks_rotation=30)\n","\n","# Thu nhỏ cỡ chữ nhãn\n","ax.set_xticklabels(label_names, fontsize=9)\n","ax.set_yticklabels(label_names, fontsize=9)\n","\n","# Căn chỉnh và làm rõ biểu đồ\n","plt.title(\"Confusion Matrix - Test Set\", fontsize=12)\n","plt.xlabel(\"Predicted Label\", fontsize=10, labelpad=10)\n","plt.ylabel(\"True Label\", fontsize=10, labelpad=10)\n","plt.tight_layout(pad=3.0)\n","plt.grid(False)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"NsMozGNGYnyq","executionInfo":{"status":"ok","timestamp":1750592191320,"user_tz":-420,"elapsed":550,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"outputId":"ec3593c0-320e-40db-b734-b752cceb4159"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"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iIjyUNZ8gawtJCTknWMePnyIpUuXwtvbG3v37sXAgQMxbNgw/PrrrwCAqKgoAOqTNLM+Z+3LDnYNExEREWmgtRm//3+N97UIvk2lUqFq1arSG8kqV66M69evY9myZejZs2fuY/l/bBEkIiIi0kDbs4bfXgrtfYmgi4sLypQpo1ZWunRphIWFAQCcnV+/LjM6OlrtmOjoaGlfdjARJCIiIspnatWqhTt37qiV3b17F56engBeTxxxdnbGwYMHpf1KpRJnz56Fr69vtu/DrmEiIiIiDbTdNZwdI0aMQM2aNTFjxgx07NgR//zzD3755Rf88ssvUkzDhw/HtGnT4O3tLS0f4+rqitatW2f7PkwEiYiIiDTRwfIxX3zxBbZs2YIxY8ZgypQp8PLywrx589CtWzfpmO+++w5JSUno168f4uLiULt2bezZsyfbawgCTASJiIiI8qXmzZtLL5R4H5lMhilTpmDKlCkffQ8mgkREREQa6KJrOK8wESQiIiLSQCaDlhLB3F9C2zhrmIiIiEhPsUWQiIiISAMZtNQ1nA+bBJkIEhEREWlQkMcIsmuYiIiISE+xRZCIiIhIEx2sI5hXmAgSERERaaKlrmHBrmEiIiIiyi/YIkhERESkgbYmi2hn5rF2MREkIiIi0qAgJ4LsGiYiIiLSU2wRJCIiItKEs4aJiIiI9BO7homIiIiowGGLIBEREZEGBblFkIkgERERkQYFORFk1zARERGRnmKLIBEREZEGBblFkIkgERERkSYFePkYdg0TERER6Sm2CBIRERFpwK5hIiIiIj1VkBNBdg0TERER6Sm2CBIRERFpUJBbBJkIEhEREWnCWcNEREREVNCwRZCIiIhIA3YNExEREempgpwIsmuYiIiISE+xRZCIiIhIAxm01CKYD2eLMBEkIiIi0oBdw0RERERU4LBFkD57U2cPgZmFla7D0DvBK87qOgS9Nq1JSV2HoLcM5PmvVYc+sQK8jiATQSIiIiINCnLXMBNBIiIiIg0KciLIMYJEREREeootgkREREQayGSvN21cJ79hIkhERESkwetEUBtdw1oIRsvYNUxERESkp9giSERERKSJlrqGuXwMERER0WeGs4aJiIiIqMBhiyARERGRBgV51jBbBImIiIg0kMtlWtuyKzg4WOqSztpKlSol7U9JScHgwYNhb28PS0tLtGvXDtHR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\n"},"metadata":{}}]},{"cell_type":"code","source":["# 9. Hàm phân loại nỗi đau\n","def classify_message(model, vectorizer, message):\n","    message_vect = vectorizer.transform([message])\n","    prediction = model.predict(message_vect)\n","    label_names = {0: 'Không có nỗi đau', 1: 'Nỗi đau tinh thần', 2: 'Nỗi đau tồn tại', 3: 'Nỗi đau xã hội'}\n","    return label_names[prediction[0]]\n","\n","# Ví dụ thử nghiệm\n","message = \"Tôi 46 tuổi, có vài cơ sở kinh doanh, một mình nuôi hai con; con lớn định năm sau đi du học, con nhỏ học lớp năm. Tôi có nhà đang cho thuê, còn mấy mẹ con thuê chỗ khác ở cho con đi học không bị tắc đường. Cuộc sống mấy mẹ con vui vẻ, hạnh phúc, chồng cũ lo toàn bộ chi phí học hành của con, tôi chỉ nuôi dạy. Thu nhập sau khi trừ hết chi phí tôi dư 100 triệu đồng mỗi tháng. Tôi có nên vay ngân hàng ba tỷ đồng để mua nhà không. Nếu vay, tôi trả lãi hàng tháng hết 30 triệu đồng, vẫn dư để trả gốc nữa. Trường hợp công việc của tôi phát triển thêm, lợi nhuận sẽ thêm nữa. Chờ bán nhà hiện tại để mua nhà khác thì tôi thấy lâu quá. Xin góp ý kiến cho tôi, chân thành cảm ơn.\"\n","print(f\"Đoạn văn: {message}\")\n","print(\"Kết quả:\", classify_message(model, vectorizer, message))"],"metadata":{"id":"JJ6YrkAhP-In","executionInfo":{"status":"ok","timestamp":1750591414632,"user_tz":-420,"elapsed":91,"user":{"displayName":"Giang Trần Sơn","userId":"15337767985807852509"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f135bf97-74ba-4dd1-85d2-4c6d9ed9574f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Đoạn văn: Tôi 46 tuổi, có vài cơ sở kinh doanh, một mình nuôi hai con; con lớn định năm sau đi du học, con nhỏ học lớp năm. Tôi có nhà đang cho thuê, còn mấy mẹ con thuê chỗ khác ở cho con đi học không bị tắc đường. Cuộc sống mấy mẹ con vui vẻ, hạnh phúc, chồng cũ lo toàn bộ chi phí học hành của con, tôi chỉ nuôi dạy. Thu nhập sau khi trừ hết chi phí tôi dư 100 triệu đồng mỗi tháng. Tôi có nên vay ngân hàng ba tỷ đồng để mua nhà không. Nếu vay, tôi trả lãi hàng tháng hết 30 triệu đồng, vẫn dư để trả gốc nữa. Trường hợp công việc của tôi phát triển thêm, lợi nhuận sẽ thêm nữa. Chờ bán nhà hiện tại để mua nhà khác thì tôi thấy lâu quá. Xin góp ý kiến cho tôi, chân thành cảm ơn.\n","Kết quả: Nỗi đau tinh thần\n"]}]}]}